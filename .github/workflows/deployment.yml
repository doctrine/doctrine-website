name: "Deployment workflow"

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      doctrine_website_mysql_password:
        required: true
      doctrine_website_algolia_admin_api_key:
        required: true
      doctrine_website_stripe_secret_key:
        required: true
      doctrine_website_send_grid_api_key:
        required: true
      doctrine_website_deployment_token:
        required: true

jobs:
  deploy:

    runs-on: "ubuntu-latest"

    services:
      mysql:
        image: "mysql:5.7"
        env:
          MYSQL_DATABASE: "doctrine_website"
          MYSQL_ROOT_PASSWORD: "${{ secrets.doctrine_website_mysql_password }}"
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    env:
      doctrine_website_github_http_token: "${{ github.token }}"
      doctrine_website_mysql_password: "${{ secrets.doctrine_website_mysql_password }}"
      doctrine_website_algolia_admin_api_key: "${{ secrets.doctrine_website_algolia_admin_api_key }}"
      doctrine_website_stripe_secret_key: "${{ secrets.doctrine_website_stripe_secret_key }}"
      doctrine_website_send_grid_api_key: "${{ secrets.doctrine_website_send_grid_api_key }}"

    steps:
    - uses: "actions/checkout@v2"

    - name: "Setup PHP Action"
      uses: "shivammathur/setup-php@v2"
      with:
        php-version: "7.4"

    - name: "Install dependencies with Composer"
      uses: "ramsey/composer-install@v1"
      with:
        composer-options: "--no-progress --no-suggest --no-dev"

    - name: "Installation of node"
      uses: "actions/setup-node@v3"
      with:
        node-version: '20.5.1'

    - name: "yarn install"
      run: "yarn install"

    - name: "Prepare Website files"
      run: "bin/console --env=${{ inputs.environment }} build-all"

    - name: "Event Participants"
      run: "bin/console --env=${{ inputs.environment }} event-participants --save"

    - name: "Deploy to ${{ inputs.environment }}"
      uses: "cpina/github-action-push-to-another-repository@v1.3"
      env:
        API_TOKEN_GITHUB: "${{ secrets.doctrine_website_deployment_token }}"
      with:
        source-directory: "build-${{ inputs.environment }}"
        destination-github-username: "doctrine"
        destination-repository-name: "doctrine-website-build-${{ inputs.environment }}"
        target-branch: "master"
        commit-message: "New version of Doctrine website"
